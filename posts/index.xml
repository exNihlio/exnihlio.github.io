<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Delicious DevOps</title>
    <link>https://exnihlio.github.io/posts/</link>
    <description>Recent content in Posts on Delicious DevOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Attribution 4.0 International (CC BY 4.0)</copyright>
    <lastBuildDate>Wed, 15 Apr 2020 12:27:00 -0700</lastBuildDate>
    
	<atom:link href="https://exnihlio.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hardening OpenSSH - Part Two</title>
      <link>https://exnihlio.github.io/posts/hardening-openssh_part_2/</link>
      <pubDate>Wed, 15 Apr 2020 12:27:00 -0700</pubDate>
      
      <guid>https://exnihlio.github.io/posts/hardening-openssh_part_2/</guid>
      <description>Part One previously covered here
Overview Hardening sshd consists of three main components:
  Using strong keys algorithms such ed25519 or minimum 4096 bit RSA keys.
  Configuring sshd to disallow root login and only to use public keys for authentication
  Removing the most common and lower level MACs and key types
  Key Generation Keys for OpenSSH are generated with the ssh-keygen command. By default, this generates a 2048 bit RSA pub/priv keypair in ~/.</description>
    </item>
    
    <item>
      <title>Hardening OpenSSH - Part One</title>
      <link>https://exnihlio.github.io/posts/hardening-openssh/</link>
      <pubDate>Sun, 15 Mar 2020 12:27:00 -0700</pubDate>
      
      <guid>https://exnihlio.github.io/posts/hardening-openssh/</guid>
      <description>Overview Simple, secure and fast, OpenSSH is the de-facto remote access software in the UNIX world today. Out of the box the OpenSSH server (sshd), is reasonably secure, but as always, there are improvements that can be made. This guide will cover the basics and some more advanced features of hardening sshd. These steps are of particular use for operating a bastion or jump host in the cloud or on-premises server.</description>
    </item>
    
    <item>
      <title>Configuring a Python3 virtual environment</title>
      <link>https://exnihlio.github.io/posts/python3-virtualenv/</link>
      <pubDate>Sun, 12 Jan 2020 13:21:47 -0700</pubDate>
      
      <guid>https://exnihlio.github.io/posts/python3-virtualenv/</guid>
      <description>Overview Python is a fantastic programming language, with tools available for nearly any task. Unfortunately, its popularity can also be something of a drawback. The majority of Linux distros use Python extensively for system configuration and management. Modification of the system Python environment for developing software can cause system errors. Additionally, two or more different Python programs may have conflicting dependencies, making it difficult to work on multiple projects at the same time.</description>
    </item>
    
  </channel>
</rss>